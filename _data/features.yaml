
  - title: Stop <code>die()</code>ing all the time
    body:  |
      <p>
      PsySH can be used as an interactive debugger, much like JavaScript's <code>debugger</code> statement, saving you
      from endless <code>var_dump()</code> and <code>die()</code> iterations. Just drop this line in where you'd like to
      have a breakpoint:
      </p>
      <p><code>eval(\Psy\sh());</code></p>

  - title: "Auto<code>[tab][tab]</code>Complete"
    img:   /assets/img/autocomplete.png
    body:  |
      <p>
      PsySH has tab completion for variable names, functions, classes, methods, properties, and even files!
      Just start typing, then hit <code>[tab]</code>. But you probably already guessed that.
      </p>
      <p>
      <small>(Tab completion requires Readline- or Libedit-enabled PHP. But you really should have that anyway)</small>
      </p>

  - title: Name <em>all</em> the spaces
    img:   /assets/img/namespace.png
    body:  |
      <p>
      Most PHP shells are terrible at  namespaces. PsySH does just what you'd expect.
      </p>

  # - title: Automatic semicolon insertion
  #   body:  |
  #     …

  - title: Read documentation in context
    img:   /assets/img/doc.png
    body:  |
      <p>
      Have a question about a core PHP function? Try <code>doc array_map</code>.
      Want to read the documentation for an object property? Run <code>doc $response->statusTexts</code>.
      </p>
      <p><code>&gt;&gt;&gt; help doc</code></p>

  - title: Reflect like a boss
    img:   /assets/img/ls.png
    body:  |
      <p>
      The <code>ls</code> command knows all about your code — and everyone else's. Easily list and search
      all variables, constants, classes, interfaces, traits, functions, methods and properties.
      </p>
      <p><code>&gt;&gt;&gt; help ls</code></p>

  - title: Use the source!
    img:   /assets/img/show.png
    body:  |
      <p>
      Easily show the source code for any userland object, class, interface, trait, constant, method or property.
      </p>
      <p><code>&gt;&gt;&gt; help show</code></p>

  - title: Forget to catch that last exception?
    img:   /assets/img/wtf.png
    body:  |
      <p>
      No worries, PsySH has your back. We caught it for you, and made it available via the <code>wtf</code> command.
      </p>
      <p><code>&gt;&gt;&gt; help wtf</code></p>

  - title: Learn from your history <em>and</em> repeat your past
    img:   /assets/img/hist.png
    body:  |
      <p>Show, search, save and replay your shell history.</p>
      <p><code>&gt;&gt;&gt; help history</code></p>


  - title: Roll your own commands
    body:  |
      <p>
      If the awesome features listed above aren't enough for you, you can write your own commands! PsySH has first-class
      support for custom commands — just register them in your <code>~/.config/psysh/config.php</code>.
      </p>

  # - title: Say something about presenters
  #   body:  |
  #     "Clean+concise string representations of evaluated values"

  # - title: Say something about custom presenters
  #   body:  |
  #     …